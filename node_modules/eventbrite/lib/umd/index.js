(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "./request", "./users", "./organizations", "./constants"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("./request"), require("./users"), require("./organizations"), require("./constants"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.request, global.users, global.organizations, global.constants);
    global.Eventbrite = mod.exports;
  }
})(this, function (_exports, _request, _users, _organizations, _constants) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  var _exportNames = {};
  _exports.default = void 0;
  _request = _interopRequireDefault(_request);
  Object.keys(_constants).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    Object.defineProperty(_exports, key, {
      enumerable: true,
      get: function get() {
        return _constants[key];
      }
    });
  });

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  var DEFAULT_API_URL = 'https://www.eventbriteapi.com/v3';

  var makeRequest = function makeRequest(baseUrl, token) {
    return function (endpoint) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var url = "".concat(baseUrl).concat(endpoint);
      var requestOptions = options;

      if (token) {
        requestOptions = _objectSpread({}, requestOptions, {
          headers: _objectSpread({}, requestOptions.headers || {}, {
            Authorization: "Bearer ".concat(token)
          })
        });
      }

      return (0, _request.default)(url, requestOptions);
    };
  };

  var eventbrite = function eventbrite() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$baseUrl = _ref.baseUrl,
        baseUrl = _ref$baseUrl === void 0 ? DEFAULT_API_URL : _ref$baseUrl,
        token = _ref.token;

    var jsonRequest = makeRequest(baseUrl, token);
    return {
      request: jsonRequest,
      users: new _users.UserApi(jsonRequest),
      organizations: new _organizations.OrganizationsApi(jsonRequest)
    };
  };

  var _default = eventbrite;
  _exports.default = _default;
});
//# sourceMappingURL=index.js.map
