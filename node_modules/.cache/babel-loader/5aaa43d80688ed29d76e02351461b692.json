{"ast":null,"code":"import _classCallCheck from \"/Users/samanthagibson/Development/code/find-some-fun/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samanthagibson/Development/code/find-some-fun/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samanthagibson/Development/code/find-some-fun/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samanthagibson/Development/code/find-some-fun/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/samanthagibson/Development/code/find-some-fun/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/samanthagibson/Development/code/find-some-fun/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/samanthagibson/Development/code/find-some-fun/src/components/Form.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\n\nvar EventForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventForm, _Component);\n\n  function EventForm(props) {\n    var _this;\n\n    _classCallCheck(this, EventForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventForm).call(this, props));\n    _this.state = {\n      eventKeyword: '',\n      category: ''\n    };\n    _this.handleKeywordChange = _this.handleKeywordChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCategoryChange = _this.handleCategoryChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EventForm, [{\n    key: \"handleKeywordChange\",\n    value: function handleKeywordChange(event) {\n      this.setState({\n        eventKeyword: event.target.value\n      });\n    }\n  }, {\n    key: \"handleCategoryChange\",\n    value: function handleCategoryChange(event) {\n      this.setState({\n        category: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var eventKeyword = document.getElementById('eventKeyword').value;\n      var category = document.getElementById('categoriesList').value;\n\n      if (eventKeyword !== '' && category !== '') {\n        //Find matching events from API\n        this.props.searchEB(eventKeyword, category);\n      } else if (eventKeyword === '' && category !== '') {\n        // Display a message that you must provide a keyword\n        this.addWarning('You must provide a keyword to search');\n      } else if (eventKeyword !== '' && category === '') {\n        // Display a message that you must select a category\n        this.addWarning('You must select a category to search');\n      } else {\n        // Display a message that you must provide a keyword & select a keyword\n        this.addWarning('You must provide a keyword and select a category to search');\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var auth_token = process.env.REACT_APP_EVENTBRITE_API_KEY;\n      fetch(\"https://www.eventbriteapi.com/v3/categories/?token=\".concat(auth_token)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.addCategories(data);\n      });\n    }\n  }, {\n    key: \"addCategories\",\n    value: function addCategories(data) {\n      var categories = data.categories;\n      var categoriesSelect = document.querySelector('#categoriesList');\n      categories.forEach(function (category) {\n        var option = document.createElement('option');\n        option.value = category.id;\n        option.appendChild(document.createTextNode(category.name));\n        categoriesSelect.appendChild(option);\n      });\n    }\n  }, {\n    key: \"addWarning\",\n    value: function addWarning(message) {\n      var _this3 = this;\n\n      // create a div\n      var div = document.createElement('div');\n      div.setAttribute(\"id\", \"warning\");\n      div.className = 'alert warning'; // add the text\n\n      div.appendChild(document.createTextNode(message)); // Insert into the HTML\n\n      var form = document.querySelector('#eventForm');\n      form.appendChild(div); // Remove the alert after 5 seconds\n\n      setTimeout(function () {\n        _this3.removeWarning();\n      }, 5000);\n    }\n  }, {\n    key: \"removeWarning\",\n    value: function removeWarning() {\n      var warning = document.querySelector('#warning');\n\n      if (warning) {\n        warning.remove();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        id: \"eventForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalKeyword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Keyword\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        type: \"text\",\n        id: \"eventKeyword\",\n        placeholder: \"Name, location . . . etc.\",\n        value: this.state.eventKeyword,\n        onChange: this.handleKeywordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        as: Row,\n        controlId: \"formHorizontalCategory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        column: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Category\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        as: \"select\",\n        id: \"categoriesList\",\n        value: this.state.category,\n        onChange: this.handleCategoryChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Select a Category\")))), React.createElement(Form.Group, {\n        as: Row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          span: 10,\n          offset: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Find Events\"))));\n    }\n  }]);\n\n  return EventForm;\n}(Component);\n\nexport default EventForm;","map":{"version":3,"sources":["/Users/samanthagibson/Development/code/find-some-fun/src/components/Form.js"],"names":["React","Component","Button","Form","Row","Col","Alert","EventForm","props","state","eventKeyword","category","handleKeywordChange","bind","handleCategoryChange","handleSubmit","event","setState","target","value","preventDefault","document","getElementById","searchEB","addWarning","auth_token","process","env","REACT_APP_EVENTBRITE_API_KEY","fetch","then","response","json","data","addCategories","categories","categoriesSelect","querySelector","forEach","option","createElement","id","appendChild","createTextNode","name","message","div","setAttribute","className","form","setTimeout","removeWarning","warning","remove","span","offset"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\n\n\nclass EventForm extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      eventKeyword: '',\n      category: ''\n    };\n\n    this.handleKeywordChange = this.handleKeywordChange.bind(this);\n    this.handleCategoryChange = this.handleCategoryChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleKeywordChange(event){\n    this.setState({eventKeyword: event.target.value})\n  }\n\n  handleCategoryChange(event){\n    this.setState({category: event.target.value})\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    const eventKeyword = document.getElementById('eventKeyword').value;\n    const category = document.getElementById('categoriesList').value;\n\n    if(eventKeyword !== '' && category !== ''){\n      //Find matching events from API\n      this.props.searchEB(eventKeyword, category);\n    }else if(eventKeyword === '' && category !== ''){\n      // Display a message that you must provide a keyword\n      this.addWarning('You must provide a keyword to search')\n    }else if(eventKeyword !== '' && category === ''){\n      // Display a message that you must select a category\n      this.addWarning('You must select a category to search')\n    }else{\n      // Display a message that you must provide a keyword & select a keyword\n      this.addWarning('You must provide a keyword and select a category to search')\n    }\n  }\n\n  componentDidMount(){\n    const auth_token = process.env.REACT_APP_EVENTBRITE_API_KEY;\n    fetch(`https://www.eventbriteapi.com/v3/categories/?token=${auth_token}`)\n      .then(response => response.json())\n      .then(data => this.addCategories(data))\n  }\n\n  addCategories(data){\n    const categories = data.categories\n    const categoriesSelect = document.querySelector('#categoriesList');\n    categories.forEach(category => {\n      const option = document.createElement('option');\n      option.value = category.id;\n      option.appendChild(document.createTextNode(category.name));\n      categoriesSelect.appendChild(option);\n    })\n  }\n\n  addWarning(message) {\n    // create a div\n    const div = document.createElement('div');\n    div.setAttribute(\"id\", \"warning\")\n    div.className = 'alert warning';\n\n    // add the text\n    div.appendChild(document.createTextNode(message));\n\n    // Insert into the HTML\n    const form = document.querySelector('#eventForm')\n    form.appendChild(div);\n\n    // Remove the alert after 5 seconds\n    setTimeout(() => {\n        this.removeWarning();\n    }, 5000);\n  }\n\n  removeWarning(){\n    const warning = document.querySelector('#warning');\n    if(warning) {\n      warning.remove();\n    }\n  }\n\n  render(){\n    return(\n      <Form onSubmit={this.handleSubmit} id='eventForm'>\n        <Form.Group as={Row} controlId=\"formHorizontalKeyword\">\n          <Form.Label column sm={2}>\n            Keyword\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control \n              type='text' \n              id='eventKeyword'\n              placeholder='Name, location . . . etc.'\n              value={this.state.eventKeyword}\n              onChange={this.handleKeywordChange}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId=\"formHorizontalCategory\">\n          <Form.Label column sm={2}>\n            Category\n          </Form.Label>\n            <Col sm={10}>\n              <Form.Control \n              as=\"select\"\n              id='categoriesList'\n              value={this.state.category}\n              onChange={this.handleCategoryChange}\n              >\n                <option value=\"\">Select a Category</option>\n              </Form.Control>\n            </Col>\n          \n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Col sm={{ span: 10, offset: 2 }}>\n            <Button type=\"submit\">Find Events</Button>\n          </Col>\n        </Form.Group>\n      </Form>\n    )\n  }\n}\n\nexport default EventForm;"]},"metadata":{},"sourceType":"module"}